stages:
  - build
  - test
  - docker
 
Build:
  image: node:erbium-alpine
  stage: build
  script:
    - npm install --progress=false
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist

Test:
  image: node:erbium-alpine
  stage: test
  script:
    - npm install --progress=false
    - npm run test:unit
  artifacts:
    reports:
      json: coverage/coverage-final.json

Docker:
  stage: docker
  image: docker:18
  dependencies:
    - Build
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  only:
    - master
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - export VERSION=$(docker run --rm -v "$PWD":/app:ro -w /app node:slim node -p "require('./package.json').version")
    - docker build --pull --build-arg VCS_REF=$CI_COMMIT_SHA --build-arg VCS_URL=$CI_PROJECT_URL --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$VERSION .
    - docker push $CI_REGISTRY_IMAGE:$VERSION
    - docker tag $CI_REGISTRY_IMAGE:$VERSION $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest